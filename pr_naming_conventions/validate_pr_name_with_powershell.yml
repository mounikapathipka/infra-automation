trigger: none
pr:
- main
- releases/*

pool:
  vmImage: 'ubuntu-latest'
steps:
  - powershell: |
      #Get-ChildItem -Path Env:\ | Format-List
      #$url = "$($env:SYSTEM_TEAMFOUNDATIONCOLLECTIONURI)$env:SYSTEM_TEAMPROJECTID/_apis/build/definitions/$($env:SYSTEM_DEFINITIONID)?api-version=5.0"
      $url = "$($env:SYSTEM_TEAMFOUNDATIONCOLLECTIONURI)$env:SYSTEM_TEAMPROJECTID/_apis/git/repositories/$($env:BUILD_REPOSITORY_ID)/pullRequests/$(System.PullRequest.PullRequestId)?api-version=5.1"
      #Write-Host "System.TeamFoundationCollectionUri $env:SYSTEM_TEAMFOUNDATIONCOLLECTIONURI"
      #Write-Host "System.TeamProject $env:SYSTEM_TEAMPROJECTID"      
      #az devops configure --defaults organization=$env:SYSTEM_TEAMFOUNDATIONCOLLECTIONURI project=env:SYSTEM_TEAMPROJECTID --use-git-aliases true
      #Write-Host "env variable $env:SYSTEM_ACCESSTOKEN"
      #Write-Host "TeamProject  $env:System.TeamProject"
      #Write-Host "Repository.ID  $env:BUILD_REPOSITORY_ID"
      #Write-Host "CollectionUri  $env:SYSTEM_COLLECTIONURI"
      #Write-Host "PullRequestId  $env:SYSTEM_PULLREQUEST.PULLREQUESTID"
      #Write-Host "PullRequestId  $(System.PullRequest.PullRequestId)"
      Write-Host "url  $url"
      Write-Host "$env:SYSTEM_ACCESSTOKEN = $(System.AccessToken)"
      $response = Invoke-RestMethod -Uri $url  -ContentType "application/json" -Headers @{Authorization = "Bearer $env:SYSTEM_ACCESSTOKEN"}
      #$pr_title="$(curl --silent -u azdo:$SYSTEM_ACCESSTOKEN  $(System.CollectionUri)_apis/git/repositories/$(Build.Repository.ID)/pullRequests/$(System.PullRequest.PullRequestId)?api-version=5.1 | jq -r .title)"
      Write-Host "response  $response"
      $pr_title=$response.title
      Write-Host 'PR title is '$pr_title
      Write-Host "##vso[task.setvariable variable=pr_title;]'$pr_title'"
    env:
      SYSTEM_ACCESSTOKEN: $(System.AccessToken)
    displayName: Extract pull request title

  - task: PowerShell@2
    displayName: 'Validate the PR title, which will be used as the commit message when merging to the target branch'
    inputs:
      targetType: 'filePath'
      filePath: 'validate_conventional_commit.ps1'
      arguments: '$(pr_title)'
      failOnStderr: true
